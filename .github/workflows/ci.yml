name: Build and Release

on:
  push:
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          cache: 'yarn'

      - name: Set up environment variables
        run: echo "CGO_ENABLED=1" >> $GITHUB_ENV

      - name: Install Go dependencies
        run: go mod download

      - name: Install Node.js dependencies
        run: yarn install
        working-directory: extension

      - name: Build macOS application
        run: make ship-ci
        working-directory: postmaster

      - name: Build extension
        run: yarn build
        working-directory: extension

  release:
    runs-on: macos-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prerelease tag
        id: check_tag_beta
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          if [[ "$TAG" == *beta* ]]; then
            echo "Tag contains 'beta'."
            echo "::set-output name=contains_beta::true"
          else
            echo "Tag does not contain 'beta'."
            echo "::set-output name=contains_beta::false"
          fi
        shell: bash

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          cache: 'yarn'

      - name: Set up environment variables
        run: echo "CGO_ENABLED=1" >> $GITHUB_ENV

      - name: Install Go dependencies
        run: go mod download

      - name: Install Node.js dependencies
        run: yarn install
        working-directory: extension

      - name: Build macOS application (pre-release)
        if: contains(github.ref, '-prerelease.') || contains(github.ref, '-beta.') || contains(github.ref, '-alpha.')
        run: make ship-ci-beta
        working-directory: postmaster

      - name: Build macOS application
        if: (!contains(github.ref, '-prerelease.') && !contains(github.ref, '-beta.') && !contains(github.ref, '-alpha.'))
        run: make ship-ci
        working-directory: postmaster

      - name: Build extension
        run: yarn build
        working-directory: extension

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Pillar Box.app
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: postmaster/bin/Pillar\ Box.zip
          asset_name: PillarBox.zip
          asset_content_type: application/zip

      - name: Upload extension
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: extension/dist
          asset_name: pillar-box-chromium-extension.zip
          asset_content_type: application/zip
